esphome:
  name: ${name}
  friendly_name: ${friendlyName}
  platformio_options:
    board_build.flash_mode: dio

esp32:
  board: m5stack-atom
  framework:
    type: esp-idf
    version: recommended
    # Custom sdkconfig options
    sdkconfig_options:
      COMPILER_OPTIMIZATION_SIZE: y

uart:
  - id: uart_ecodan
    rx_pin:
      number: GPIO25
      mode:
        input: true
        pullup: true
    tx_pin:
      number: GPIO21
      mode:
        output: true
    baud_rate: 2400
    parity: EVEN
    stop_bits: 1
    # debug:
    #   direction: BOTH
    #   dummy_receiver: false
    #   after:
    #     delimiter: "\n"
    #   sequence:
    #     - lambda: UARTDebug::log_hex(direction, bytes, ' ');
  
  - id: uart_proxy
    rx_pin:
      number: GPIO23
      mode:
        input: true
        pullup: true
    tx_pin:
      number: GPIO33
      mode:
        output: true
    baud_rate: 9600
    parity: EVEN
    stop_bits: 1
    # debug:
    #   direction: BOTH
    #   dummy_receiver: false
    #   after:
    #     delimiter: "\n"
    #   sequence:
    #     - lambda: UARTDebug::log_hex(direction, bytes, '_');

ecodan:
  proxy_uart_id: uart_proxy

light:
  - platform: esp32_rmt_led_strip
    name: Led
    id: led
    internal: true
    rgb_order: GRB
    pin: GPIO27
    num_leds: 4
    # RMT 0 channels will be occupied by IR
    rmt_channel: 1
    chipset: ws2812
    restore_mode: ALWAYS_ON  #OFF?
    effects:
      - pulse:
          name: slow_pulse
          transition_length: 250ms
          update_interval: 250ms
          min_brightness: 25%
          max_brightness: 100%
      - pulse:
          name: fast_pulse
          transition_length: 100ms
          update_interval: 100ms
          min_brightness: 25%
          max_brightness: 100%

binary_sensor:
  - platform: gpio
    name: Button
    id: force_dhw_button
    pin:
      number: GPIO39
      inverted: true
    internal: true
    filters:
      - delayed_off: 10ms
    on_press:
      then:
        - lambda: |-
            id(ecodan_instance).set_dhw_force(true);
            
button:
  - platform: restart
    id: restart_button
    name: ${restart_button}

sensor:
  - platform: internal_temperature
    name: ${internal_esp_temperature}
    entity_category: diagnostic